/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2021-07-22 19:59:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.account;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class open2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1626059103590L));
    _jspx_dependants.put("jar:file:/C:/kopo/kopo-05-web/server-work/wtpwebapps/HN-OpenBanking/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<!--\r\n");
      out.write("	Editorial by HTML5 UP\r\n");
      out.write("	html5up.net | @ajlkn\r\n");
      out.write("	Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)\r\n");
      out.write("-->\r\n");
      out.write("<html>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/head.jsp", out, false);
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	\r\n");
      out.write("	function checkRegex(){\r\n");
      out.write("		let bCheck = false\r\n");
      out.write("\r\n");
      out.write("		let alias = $('#alias').val();\r\n");
      out.write("		let password = $('#password').val();\r\n");
      out.write("		\r\n");
      out.write("		let alias_regex = /^[가-힣]{1,10}/\r\n");
      out.write("		let pw_regex = /^[0-9]{4}$/\r\n");
      out.write("		\r\n");
      out.write("		// 비밀번호 검사\r\n");
      out.write("		if(!pw_regex.test(password)){\r\n");
      out.write("			bCheck = false\r\n");
      out.write("			$('#alert-modal-body-msg').text('비밀번호는 숫자 4자리로 입력해주세요.')\r\n");
      out.write("			$('#alertModal').modal('show')\r\n");
      out.write("		}\r\n");
      out.write("		// 계좌 별칭 검사\r\n");
      out.write("		else if(!alias_regex.test(alias)){\r\n");
      out.write("			bCheck = false\r\n");
      out.write("			console.log(\"else if 진입\" + bCheck)\r\n");
      out.write("			$('#alert-modal-body-msg').text('별칭은 10글자 이내의 한글로 입력해주세요.')\r\n");
      out.write("			$('#alertModal').modal('show')\r\n");
      out.write("		}\r\n");
      out.write("		else{\r\n");
      out.write("			bCheck = true\r\n");
      out.write("			console.log(\"else진입\" + bCheck)\r\n");
      out.write("		}\r\n");
      out.write("		return bCheck\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function nextStep(){\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		let url = \"\"\r\n");
      out.write("\r\n");
      out.write("		let typeCode = $(\"select[name='account_type'] option:selected\").val();\r\n");
      out.write("		let alias = $('#alias').val();\r\n");
      out.write("		let password = $('#password').val();\r\n");
      out.write("		\r\n");
      out.write("		if(checkRegex()){\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"");
      out.print(request.getContextPath());
      out.write("/account/open/step2.do\",\r\n");
      out.write("				data : {\r\n");
      out.write("					typeCode : typeCode,\r\n");
      out.write("					alias : alias,\r\n");
      out.write("					password : password\r\n");
      out.write("				},\r\n");
      out.write("				type : \"post\",\r\n");
      out.write("				success : callback,\r\n");
      out.write("				error : function() {\r\n");
      out.write("					alert('error')\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function callback(result) {\r\n");
      out.write("		console.log(result)\r\n");
      out.write("		alert(result)\r\n");
      out.write("		$('#modal-after-section').html(result)\r\n");
      out.write("		$('#myModal').modal(\"show\")\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<body class=\"is-preload\">\r\n");
      out.write("\r\n");
      out.write("	<!-- Wrapper -->\r\n");
      out.write("	<div id=\"wrapper\">\r\n");
      out.write("\r\n");
      out.write("		<!-- Main -->\r\n");
      out.write("		<div id=\"main\">\r\n");
      out.write("			<div class=\"inner\">\r\n");
      out.write("\r\n");
      out.write("				<!-- Header -->\r\n");
      out.write("				");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<section>\r\n");
      out.write("					<header class=\"major\">\r\n");
      out.write("						<h2>비대면 계좌개설</h2>\r\n");
      out.write("					</header>\r\n");
      out.write("					<h3 id=\"elements\">2단계 : 계좌 개설</h3>\r\n");
      out.write("					<p>계좌 개설을 위해 필요한 정보를 선택 및 입력하세요.</p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<hr class=\"major\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("						<div class=\"row\">\r\n");
      out.write("							<div class=\"col-5 col-12-medium\">\r\n");
      out.write("\r\n");
      out.write("								<div class=\"col-12\">\r\n");
      out.write("									<h4>계좌 종류 선택</h4>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"col-12-small\">\r\n");
      out.write("									<select name=\"account_type\" id=\"account_type\">\r\n");
      out.write("										");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("									</select>\r\n");
      out.write("								</div>\r\n");
      out.write("\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"col-7 col-12-medium\">\r\n");
      out.write("								<div class=\"col-12\">\r\n");
      out.write("									<h4>계좌 비밀번호 입력</h4>\r\n");
      out.write("								</div>\r\n");
      out.write("\r\n");
      out.write("								<div class=\"col-12\">\r\n");
      out.write("									<input type=\"password\" name=\"password\" id=\"password\" value=\"\"\r\n");
      out.write("										placeholder=\"비밀번호 숫자 4자리\" />\r\n");
      out.write("								</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("								<br>\r\n");
      out.write("\r\n");
      out.write("								<div class=\"col-12\">\r\n");
      out.write("									<h4>계좌 별칭 입력</h4>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"col-12\">\r\n");
      out.write("									<input type=\"text\" name=\"alias\" id=\"alias\" value=\"\"\r\n");
      out.write("										placeholder=\"한글 계좌 별칭\" />\r\n");
      out.write("								</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("							</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("							<!-- Break -->\r\n");
      out.write("							<div class=\"col-12\" style=\"text-align: right; margin-top: 2em\">\r\n");
      out.write("								<input type=\"button\" value=\"다음\" class=\"button primary large\" onclick=\"nextStep()\"/>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("				</section>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<div id=\"modal-after-section\"></div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<!-- Modal -->\r\n");
      out.write("				<div id=\"alertModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\"\r\n");
      out.write("					aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("					<div class=\"modal-dialog\">\r\n");
      out.write("\r\n");
      out.write("						<!-- Modal content-->\r\n");
      out.write("						<div class=\"modal-content\">\r\n");
      out.write("							<div class=\"modal-header\">\r\n");
      out.write("								<button type=\"button\" class=\"close button modalClose\"\r\n");
      out.write("									data-dismiss=\"modal\" style=\"box-shadow: none;\">&times;</button>\r\n");
      out.write("								<h4 class=\"modal-title\">알림</h4>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"modal-body\">\r\n");
      out.write("								<p id=\"alert-modal-body-msg\"></p>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"modal-footer\">\r\n");
      out.write("								<button type=\"button\" class=\"btn button primary\"\r\n");
      out.write("									data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<!-- Sidebar -->\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/sidebar.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- Scripts -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/script.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /account/open2.jsp(117,10) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/account/open2.jsp(117,10) '${aList }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${aList }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /account/open2.jsp(117,10) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("type");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("											<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${type.code }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${type.type }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("										");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
