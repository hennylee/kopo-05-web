/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2021-07-24 21:02:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.account.open;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class open1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<!--\r\n");
      out.write("	Editorial by HTML5 UP\r\n");
      out.write("	html5up.net | @ajlkn\r\n");
      out.write("	Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)\r\n");
      out.write("-->\r\n");
      out.write("<html>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/head.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	\r\n");
      out.write("	function checkRegex(){\r\n");
      out.write("		let bCheck = false\r\n");
      out.write("\r\n");
      out.write("		let agree = $('#openStep1_agree')[0]\r\n");
      out.write("		let residentNum1 = $('#residentNum1').val();\r\n");
      out.write("		let residentNum2 = $('#residentNum2').val();\r\n");
      out.write("		let tel1 = $('#tel1').val();\r\n");
      out.write("		let tel2 = $('#tel2').val();\r\n");
      out.write("		let tel3 = $('#tel3').val();\r\n");
      out.write("		\r\n");
      out.write("		let tel1_regex = /^[0-9]{3}$/\r\n");
      out.write("		let tel2_regex = /^[0-9]{4}$/\r\n");
      out.write("		let tel3_regex = /^[0-9]{4}$/\r\n");
      out.write("		let residentNum1_regex = /^[0-9]{6}$/\r\n");
      out.write("		let residentNum2_regex = /^[0-9]{7}$/\r\n");
      out.write("		// 정보 동의 체크 안했다면?\r\n");
      out.write("		if(!agree.checked){\r\n");
      out.write("			bCheck = false\r\n");
      out.write("			$('#alert-modal-body-msg').text('개인 정보 동의는 필수 체크 항목입니다.')\r\n");
      out.write("			$('#alertModal').modal('show')\r\n");
      out.write("		}\r\n");
      out.write("		// 정보 동의 체크 했다면? 주민번호 검사\r\n");
      out.write("		else if(!residentNum1_regex.test(residentNum1)){\r\n");
      out.write("			bCheck = false\r\n");
      out.write("			$('#alert-modal-body-msg').text('주민번호(생년월일)는 숫자 6자리로 입력하세요.')\r\n");
      out.write("			$('#alertModal').modal('show')\r\n");
      out.write("		}\r\n");
      out.write("		else if(!residentNum2_regex.test(residentNum2)){\r\n");
      out.write("			bCheck = false\r\n");
      out.write("			$('#alert-modal-body-msg').text('주민번호 뒷자리는 숫자 7자리로 입력하세요.')\r\n");
      out.write("			$('#alertModal').modal('show')\r\n");
      out.write("		}\r\n");
      out.write("		// 전화번호 검사\r\n");
      out.write("		else if(!tel1_regex.test(tel1)){\r\n");
      out.write("			bCheck = false\r\n");
      out.write("			$('#alert-modal-body-msg').text('전화번호 첫번째 번호는 숫자 3자리로 입력하세요')\r\n");
      out.write("			$('#alertModal').modal('show')\r\n");
      out.write("		}\r\n");
      out.write("		else if(!tel2_regex.test(tel2)){\r\n");
      out.write("			bCheck = false\r\n");
      out.write("			$('#alert-modal-body-msg').text('전화번호 가운데 번호는 숫자 4자리로 입력하세요')\r\n");
      out.write("			$('#alertModal').modal('show')\r\n");
      out.write("		}\r\n");
      out.write("		else if(!tel3_regex.test(tel3)){\r\n");
      out.write("			bCheck = false\r\n");
      out.write("			$('#alert-modal-body-msg').text('전화번호 마지막 번호는 숫자 4자리로 입력하세요')\r\n");
      out.write("			$('#alertModal').modal('show')\r\n");
      out.write("		}\r\n");
      out.write("		else{\r\n");
      out.write("			bCheck = true\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		return bCheck\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function nextStep(){\r\n");
      out.write("		let url = \"\"\r\n");
      out.write("		\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		let residentNum1 = $('#residentNum1').val();\r\n");
      out.write("		let residentNum2 = $('#residentNum2').val();\r\n");
      out.write("		let tel1 = $('#tel1').val();\r\n");
      out.write("		let tel2 = $('#tel2').val();\r\n");
      out.write("		let tel3 = $('#tel3').val();\r\n");
      out.write("		\r\n");
      out.write("		if(checkRegex()){\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"");
      out.print(request.getContextPath());
      out.write("/account/open/step1.do\",\r\n");
      out.write("				data : {\r\n");
      out.write("					residentNum1 : residentNum1,\r\n");
      out.write("					residentNum2 : residentNum2,\r\n");
      out.write("					tel1 : tel1,\r\n");
      out.write("					tel2 : tel2,\r\n");
      out.write("					tel3 : tel3\r\n");
      out.write("				},\r\n");
      out.write("				type : \"post\",\r\n");
      out.write("				success : callback,\r\n");
      out.write("				error : function() {\r\n");
      out.write("					alert('error')\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	function callback(result) {\r\n");
      out.write("		$('#modal-after-section').html(result)\r\n");
      out.write("		$('#myModal').modal(\"show\")\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<body class=\"is-preload\">\r\n");
      out.write("\r\n");
      out.write("	<!-- Wrapper -->\r\n");
      out.write("	<div id=\"wrapper\">\r\n");
      out.write("\r\n");
      out.write("		<!-- Main -->\r\n");
      out.write("		<div id=\"main\">\r\n");
      out.write("			<div class=\"inner\">\r\n");
      out.write("\r\n");
      out.write("				<!-- Header -->\r\n");
      out.write("				");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<section>\r\n");
      out.write("					<header class=\"major\">\r\n");
      out.write("						<h2>비대면 계좌개설</h2>\r\n");
      out.write("					</header>\r\n");
      out.write("					<h3 id=\"elements\">1단계 : 본인 조회</h3>\r\n");
      out.write("					<p>금융 거래 정보 조회를 위해 아래 정보를 입력해주세요</p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<hr class=\"major\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<div class=\"row gtr-uniform\">\r\n");
      out.write("						<div class=\"col-12\">\r\n");
      out.write("							<h4>개인 정보 동의</h4>\r\n");
      out.write("							<textarea name=\"\" id=\"\" rows=\"10\" readonly=\"readonly\"\r\n");
      out.write("								style=\"resize: none;\">\r\n");
      out.write("HN은행은 비대면 계좌개설와 관련하여 아래와 같이 개인정보를 수집‧이용하고자 합니다.\r\n");
      out.write("\r\n");
      out.write("개인정보 수집·이용 내역 (필수사항)\r\n");
      out.write("항 목 : 회원ID(이메일주소), 비밀번호, 성명, 주민등록번호, 휴대폰 번호\r\n");
      out.write("목 적 : 금융 정보 조회 제공\r\n");
      out.write("보유기간 : 탈퇴/해지 신청시까지\r\n");
      out.write("\r\n");
      out.write("※ 상기 개인정보 수집‧이용에 대한 동의를 거부할 권리가 있으며, 동의를 거부할 경우 HN은행 비대면 계좌개 이용에 제한을 받을 수 있습니다.\r\n");
      out.write("※ 만 14세 미만 아동에게는 서비스를 제공하지 않습니다. \r\n");
      out.write("       					</textarea>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"col-12\" style=\"text-align: right\">\r\n");
      out.write("							<input type=\"checkbox\" id=\"openStep1_agree\"\r\n");
      out.write("								name=\"openStep1_agree\" required> <label\r\n");
      out.write("								for=\"openStep1_agree\">동의합니다.</label>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("						<div class=\"col-12\">\r\n");
      out.write("							<h4>주민번호</h4>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"col-6 col-12-xsmall\">\r\n");
      out.write("							<input type=\"text\" name=\"residentNum1\" id=\"residentNum1\" value=\"\"\r\n");
      out.write("								placeholder=\"생년월일\" />\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"col-6 col-12-xsmall\">\r\n");
      out.write("							<input type=\"password\" name=\"residentNum2\" id=\"residentNum2\"\r\n");
      out.write("								value=\"\" placeholder=\"주민번호 뒷자리\" />\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("						<div class=\"col-12\">\r\n");
      out.write("							<h4>전화번호</h4>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"col-4 col-12-small\">\r\n");
      out.write("							<select name=\"tel1\" id=\"tel1\">\r\n");
      out.write("								<option value=\"010\">010</option>\r\n");
      out.write("								<option value=\"011\">011</option>\r\n");
      out.write("							</select>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"col-4 col-12-small\">\r\n");
      out.write("							<input type=\"tel\" name=\"tel2\" id=\"tel2\" value=\"\"\r\n");
      out.write("								placeholder=\"전화번호 앞자리\" />\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"col-4 col-12-small\">\r\n");
      out.write("							<input type=\"tel\" name=\"tel3\" id=\"tel3\" value=\"\"\r\n");
      out.write("								placeholder=\"전화번호 뒷자리\" />\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("						<!-- Break -->\r\n");
      out.write("						<div class=\"col-12\" style=\"text-align: right; margin-top: 2em\">\r\n");
      out.write("							<input type=\"button\" value=\"다음\" class=\"button primary large\"\r\n");
      out.write("								onclick=\"nextStep()\" />\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				</section>\r\n");
      out.write("\r\n");
      out.write("				<div id=\"modal-after-section\"></div>\r\n");
      out.write("				<!-- <div id=\"modal-alert-section\"></div> -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<!-- Modal -->\r\n");
      out.write("				<div id=\"alertModal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\"\r\n");
      out.write("					aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("					<div class=\"modal-dialog\">\r\n");
      out.write("\r\n");
      out.write("						Modal content\r\n");
      out.write("						<div class=\"modal-content\">\r\n");
      out.write("							<div class=\"modal-header\">\r\n");
      out.write("								<button type=\"button\" class=\"close button modalClose\"\r\n");
      out.write("									data-dismiss=\"modal\" style=\"box-shadow: none;\">&times;</button>\r\n");
      out.write("								<h4 class=\"modal-title\">알림</h4>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"modal-body\">\r\n");
      out.write("								<p id=\"alert-modal-body-msg\"></p>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"modal-footer\">\r\n");
      out.write("								<button type=\"button\" class=\"btn button primary\"\r\n");
      out.write("									data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<!-- Sidebar -->\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/sidebar.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- Scripts -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/include/script.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
